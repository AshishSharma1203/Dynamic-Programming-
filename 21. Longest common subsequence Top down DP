--> Longest Common Subsequence Continued...
Top - down  Approach -

Video Link : https://youtu.be/hR3s9rGlMTU

Code --> 

#include<bits/stdc++.h>
using namespace std;

    
  
    int LCS(string s1,string s2,int n,int m, vector<vector<int>> &t )
    {
  
        
        for(int i=0;i<n+1;i++){
            t[i][0]=0;
            
        }
        
        for(int j=0;j<m+1;j++)
        {
            t[0][j]=0;
        }
        
        
        for(int i=1;i<n+1;i++)
        {
            
            for(int j=1;j<m+1;j++)
            {
                
                if(s1[i-1]=s2[j-1])
                {
                    t[i][j]=1+t[i-1][j-1];
                }
                else{
                    t[i][j]= max(t[i][j-1] , t[i-1][j]);
                }
                
            }
            
        }
        
        return t[n][m];
        
    }
        
     
int main()
{
   
 
    
        int n, m; cin >> n >> m;
        string s1, s2;
        cin >> s1 >> s2;
        
    // int t[n+1][m+1];
    vector<vector<int>> t (n+1, vector<int> (m+1)); 
        
      int ans =  LCS(s1,s2,n,m,t);
      cout<<ans;

     return 0; 
}
